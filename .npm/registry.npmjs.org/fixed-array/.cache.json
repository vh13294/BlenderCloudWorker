{"_id":"fixed-array","_rev":"10-d588be4ad11926fec1c62747714c7b18","name":"fixed-array","description":"A small utility for storing and working with a fixed-length history of (ususally numeric) values.","dist-tags":{"latest":"1.0.0"},"versions":{"0.1.0":{"name":"fixed-array","description":"A small utility for storing and working with a fixed-length history of (ususally numeric) values.","version":"0.1.0","author":{"name":"Bryce B. Baril","email":"bryce@ravenwall.com"},"dependencies":{},"devDependencies":{"tap":">=0.3.x"},"keywords":["array","fixed","size","length","stats"],"repository":{"type":"git","url":"http://github.com/Ravenwall/node-fixed-array.git"},"main":"lib/index.js","directories":{"lib":"./lib","test":"./test"},"engines":{"node":"*"},"_id":"fixed-array@0.1.0","dist":{"shasum":"b2c08e65c3108af02f5c15baf1ddb012fe02a804","tarball":"https://registry.npmjs.org/fixed-array/-/fixed-array-0.1.0.tgz"},"_npmVersion":"1.1.59","_npmUser":{"name":"bryce","email":"bryce@ravenwall.com"},"maintainers":[{"name":"bryce","email":"bryce@ravenwall.com"}]},"0.1.1":{"name":"fixed-array","description":"A small utility for storing and working with a fixed-length history of (ususally numeric) values.","version":"0.1.1","author":{"name":"Bryce B. Baril","email":"bryce@ravenwall.com"},"dependencies":{},"devDependencies":{"tap":">=0.3.x"},"keywords":["array","fixed","size","length","stats"],"repository":{"type":"git","url":"http://github.com/Ravenwall/node-fixed-array.git"},"main":"lib/index.js","directories":{"lib":"./lib","test":"./test"},"engines":{"node":"*"},"_id":"fixed-array@0.1.1","dist":{"shasum":"6115345b29629c3f1153ec9914f247612639f268","tarball":"https://registry.npmjs.org/fixed-array/-/fixed-array-0.1.1.tgz"},"_npmVersion":"1.1.59","_npmUser":{"name":"bryce","email":"bryce@ravenwall.com"},"maintainers":[{"name":"bryce","email":"bryce@ravenwall.com"}]},"0.1.2":{"name":"fixed-array","description":"A small utility for storing and working with a fixed-length history of (ususally numeric) values.","version":"0.1.2","author":{"name":"Bryce B. Baril","email":"bryce@ravenwall.com"},"dependencies":{},"devDependencies":{"tap":">=0.4.x"},"keywords":["array","fixed","size","length","stats"],"repository":{"type":"git","url":"http://github.com/Ravenwall/node-fixed-array.git"},"main":"lib/index.js","directories":{"test":"test"},"engines":{"node":"*"},"bugs":{"url":"https://github.com/Ravenwall/node-fixed-array/issues"},"homepage":"https://github.com/Ravenwall/node-fixed-array","scripts":{"test":"tap test/*.js"},"license":"MIT","_id":"fixed-array@0.1.2","dist":{"shasum":"376288ed8beafb1c213107cfa85595e8bdb087d3","tarball":"https://registry.npmjs.org/fixed-array/-/fixed-array-0.1.2.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"bryce","email":"bryce@ravenwall.com"},"maintainers":[{"name":"bryce","email":"bryce@ravenwall.com"}]},"0.2.0":{"name":"fixed-array","description":"A small utility for storing and working with a fixed-length history of (ususally numeric) values.","version":"0.2.0","author":{"name":"Bryce B. Baril","email":"bryce@ravenwall.com"},"dependencies":{},"devDependencies":{"tap":">=0.4.x"},"keywords":["array","fixed","size","length","stats"],"repository":{"type":"git","url":"http://github.com/Ravenwall/node-fixed-array.git"},"main":"lib/index.js","directories":{"test":"test"},"engines":{"node":"*"},"bugs":{"url":"https://github.com/Ravenwall/node-fixed-array/issues"},"homepage":"https://github.com/Ravenwall/node-fixed-array","scripts":{"test":"tap test/*.js"},"license":"MIT","_id":"fixed-array@0.2.0","dist":{"shasum":"d9945268bfc805afcdcafd19aac1122ee16dac75","tarball":"https://registry.npmjs.org/fixed-array/-/fixed-array-0.2.0.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"bryce","email":"bryce@ravenwall.com"},"maintainers":[{"name":"bryce","email":"bryce@ravenwall.com"}]},"1.0.0":{"name":"fixed-array","description":"A small utility for storing and working with a fixed-length history of (ususally numeric) values.","version":"1.0.0","author":{"name":"Bryce B. Baril","email":"bryce@ravenwall.com"},"dependencies":{},"devDependencies":{"tape":"~2.12.0"},"keywords":["array","fixed","size","length","stats"],"repository":{"type":"git","url":"http://github.com/Ravenwall/node-fixed-array.git"},"main":"fixed-array.js","directories":{"test":"test"},"engines":{"node":"*"},"bugs":{"url":"https://github.com/Ravenwall/node-fixed-array/issues"},"homepage":"https://github.com/Ravenwall/node-fixed-array","scripts":{"test":"node test/"},"license":"MIT","_id":"fixed-array@1.0.0","dist":{"shasum":"69d451a17ca0233c25f120c94ee1357b4efbc100","tarball":"https://registry.npmjs.org/fixed-array/-/fixed-array-1.0.0.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"bryce","email":"bryce@ravenwall.com"},"maintainers":[{"name":"bryce","email":"bryce@ravenwall.com"}]}},"readme":"# fixed-array\n\n[![NPM](https://nodei.co/npm/fixed-array.png)](https://nodei.co/npm/fixed-array/)\n\nA simple fixed-size array/history for node.js with some light statistical methods. Intended for use with numeric values, e.g. what were the response times for the last 100 requests processed, and what were their min, max, and mean.\n\n```javascript\nvar FixedArray = require(\"fixed-array\");\n\nvar request_log = FixedArray(100);\n\n// ... in your http server after processing your requests:\n  request_log.push(request_time);\n\n// ... later, when you're interested in looking at stats:\n  var min = request_log.min();\n  var max = request_log.max();\n  var mean = request_log.mean();\n```\n\nAnother example use it to easily track the min and max values of a series:\n```javascript\n  var ts_range = FixedArray(2);\n  var db_results = ...;\n  for (var i = 0; i < db_results.length; i++) {\n    // do something with the results...\n    ts_range.push(db_results[i].timestamp);\n  }\n\n  some_function(ts_range.min(), ts_range.max());\n```\n\nVersus:\n```javascript\n  var min, max;\n  var db_results = ...;\n  for (var i = 0; i < db_results.length; i++) {\n    // do something with the results...\n    if (isNaN(min) || db_results[i].timestamp < min) {\n      if (!isNaN(db_results[i].timestamp)) {\n        min = db_results[i].timestamp;\n      }\n    }\n    if (isNaN(max) || db_results[i].timestamp > max) {\n      if (!isNaN(db_results[i].timestamp)) {\n        max = db_results[i].timestamp;\n      }\n    }\n  }\n\n  some_function(min, max);\n```\n\nAPI\n=======\n\nfa.newFixedValueHistory(length[, initial_values])\n---\n\nCreate a new fixed-length value history of length `length` with optional `initial_values`\n\n.push(value) .push([values])\n---\n\nPush the specified value(s) onto the fixed array, removing any older values (in order) required to maintain the fixed-length.\n\n.min()\n---\n\nReturn the smallest value in the current data. If any NaN entries are present, returns NaN.\n\n.max()\n---\n\nReturn the largest value in the current data. If any NaN entries are present, returns NaN.\n\n.mean()\n---\n\nCalculate and return the mean of the current data. Any non-numeric items will be considered NULL during sum, affecting the mean.\n\n.variance()\n---\n\nCalculate and return the variance of the current data. Any non-numeric items will be considered NULL during sum, affecting the variance.\n\n.length()\n---\n\nReturn the current length of the dataset.\n\n.sum\n---\n\nReturn the sum of the current data. Any non-numeric items will be skipped in the sum.\n\n.values()\n---\n\nReturns a *copy* of the values currently stored.\n","maintainers":[{"name":"bryce","email":"bryce@ravenwall.com"}],"time":{"modified":"2014-03-26T22:04:55.453Z","created":"2012-10-31T21:47:41.584Z","0.1.0":"2012-10-31T21:47:42.987Z","0.1.1":"2012-11-13T21:58:35.093Z","0.1.2":"2014-01-31T01:30:45.609Z","0.2.0":"2014-02-14T23:56:04.418Z","1.0.0":"2014-03-26T22:04:55.453Z"},"author":{"name":"Bryce B. Baril","email":"bryce@ravenwall.com"},"repository":{"type":"git","url":"http://github.com/Ravenwall/node-fixed-array.git"},"readmeFilename":"README.md","homepage":"https://github.com/Ravenwall/node-fixed-array","keywords":["array","fixed","size","length","stats"],"bugs":{"url":"https://github.com/Ravenwall/node-fixed-array/issues"},"license":"MIT","_attachments":{},"_etag":"W/\"53334f07-202f\"","_lastModified":"Wed, 26 Mar 2014 22:04:55 GMT"}