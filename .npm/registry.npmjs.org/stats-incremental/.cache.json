{"_id":"stats-incremental","_rev":"6-d9bec636ff3faea3ecc65588b8a4c72b","name":"stats-incremental","description":"A simple tool for calculating incremental stats on numeric streams.","dist-tags":{"latest":"1.1.0"},"versions":{"1.0.0":{"name":"stats-incremental","version":"1.0.0","description":"A simple tool for calculating incremental stats on numeric streams.","main":"stats.js","directories":{"example":"examples","test":"test"},"scripts":{"test":"node test/"},"keywords":["stats","statistics","numbers","math","sum","mean","average","variance","deviation"],"author":{"name":"Bryce B. Baril"},"license":"MIT","jshintConfig":{"asi":true,"globalstrict":true,"validthis":true,"eqnull":true,"node":true,"loopfunc":true,"newcap":false,"eqeqeq":false},"dependencies":{},"devDependencies":{"stats-lite":"^1.0.3","tape":"~2.10.2"},"repository":{"type":"git","url":"git://github.com/brycebaril/stats-incremental.git"},"bugs":{"url":"https://github.com/brycebaril/stats-incremental/issues"},"homepage":"https://github.com/brycebaril/stats-incremental","_id":"stats-incremental@1.0.0","_shasum":"a7ae2f2f78239a8f9b8ec8aab6e5dd7946e687ad","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"bryce","email":"bryce@ravenwall.com"},"maintainers":[{"name":"bryce","email":"bryce@ravenwall.com"}],"dist":{"shasum":"a7ae2f2f78239a8f9b8ec8aab6e5dd7946e687ad","tarball":"https://registry.npmjs.org/stats-incremental/-/stats-incremental-1.0.0.tgz"}},"1.0.1":{"name":"stats-incremental","version":"1.0.1","description":"A simple tool for calculating incremental stats on numeric streams.","main":"stats.js","directories":{"example":"examples","test":"test"},"scripts":{"test":"node test/"},"keywords":["stats","statistics","numbers","math","sum","mean","average","variance","deviation"],"author":{"name":"Bryce B. Baril"},"license":"MIT","jshintConfig":{"asi":true,"globalstrict":true,"validthis":true,"eqnull":true,"node":true,"loopfunc":true,"newcap":false,"eqeqeq":false},"dependencies":{},"devDependencies":{"stats-lite":"^1.0.3","tape":"~2.10.2"},"repository":{"type":"git","url":"git://github.com/brycebaril/stats-incremental.git"},"bugs":{"url":"https://github.com/brycebaril/stats-incremental/issues"},"homepage":"https://github.com/brycebaril/stats-incremental","gitHead":"c8318afdbcff5ee74f99e3f17125e78ffdd806c9","_id":"stats-incremental@1.0.1","_shasum":"2babd10908c9326abb892936e56bb415c956e618","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"bryce","email":"bryce@ravenwall.com"},"maintainers":[{"name":"bryce","email":"bryce@ravenwall.com"}],"dist":{"shasum":"2babd10908c9326abb892936e56bb415c956e618","tarball":"https://registry.npmjs.org/stats-incremental/-/stats-incremental-1.0.1.tgz"}},"1.1.0":{"name":"stats-incremental","version":"1.1.0","description":"A simple tool for calculating incremental stats on numeric streams.","main":"stats.js","directories":{"example":"examples","test":"test"},"scripts":{"test":"node test/"},"keywords":["stats","statistics","numbers","math","sum","mean","average","variance","deviation"],"author":{"name":"Bryce B. Baril"},"license":"MIT","jshintConfig":{"asi":true,"globalstrict":true,"validthis":true,"eqnull":true,"node":true,"loopfunc":true,"newcap":false,"eqeqeq":false},"dependencies":{},"devDependencies":{"stats-lite":"^1.0.3","tape":"~2.14.0"},"repository":{"type":"git","url":"git://github.com/brycebaril/stats-incremental.git"},"bugs":{"url":"https://github.com/brycebaril/stats-incremental/issues"},"homepage":"https://github.com/brycebaril/stats-incremental","gitHead":"e9a5ece9123235869bf78bb4a71e6a94a1993572","_id":"stats-incremental@1.1.0","_shasum":"a387155817cbe0ca21ae817a9b79d3272872d096","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"bryce","email":"bryce@ravenwall.com"},"maintainers":[{"name":"bryce","email":"bryce@ravenwall.com"}],"dist":{"shasum":"a387155817cbe0ca21ae817a9b79d3272872d096","tarball":"https://registry.npmjs.org/stats-incremental/-/stats-incremental-1.1.0.tgz"}}},"readme":"stats-incremental\n=====\n\n[![NPM](https://nodei.co/npm/stats-incremental.svg)](https://nodei.co/npm/stats-incremental/)\n\nA light statstical package for incremental (i.e. rolling, streaming) sets of numbers.\n\nE.g. given a source of numbers of unknown length that you would like to at any given time know any of:\n\n  * count\n  * min\n  * max\n  * sum\n  * variance\n  * standard_deviation\n\nThis module can be used either with Node `streams` via a wrapper such as `through2` or without being streaming.\n\nExample\n---\n\nNon-streaming:\n\n```javascript\nvar Stats = require(\"stats-incremental\")\n\nvar dice = require(\"dice\")\nvar s = Stats()\n\nvar rolls = []\nfor (var i = 0; i < 100; i++) {\n  s.update(dice.sum(dice.roll(\"2d6\")))\n  console.log(s.getAll())\n}\n\n/* E.g.\n  { n: 97,\n  min: 2,\n  max: 12,\n  sum: 673,\n  mean: 6.938144329896907,\n  variance: 5.851843979168881,\n  standard_deviation: 2.419058490233107 }\n*/\n\n\nconsole.log(s.mean)\nconsole.log(s.standard_deviation)\n\n```\n\nWith streams:\n\n```js\nvar spigot = require(\"stream-spigot\")\nvar through2 = require(\"through2\")\nvar terminus = require(\"terminus\")\n\nvar Stats = require(\"stats-incremental\")\nvar s = Stats()\n\nvar statStream = through2.obj(function (chunk, encoding, callback) {\n  s.update(chunk)\n  if (s.n % 100000 === 0) {\n    console.log(s.getAll())\n  }\n  this.push(chunk)\n  callback()\n})\n\nspigot.sync({objectMode: true}, Math.random)\n  .pipe(statStream)\n  .pipe(terminus.devnull({objectMode: true}))\n\n/*\n  { n: 100000,\n    min: 2.0884908735752106e-7,\n    max: 0.9999937505926937,\n    sum: 49861.06196602131,\n    mean: 0.49861061966021336,\n    variance: 0.08331362954827709,\n    standard_deviation: 0.28864100462040576 }\n  { n: 200000,\n    min: 2.0884908735752106e-7,\n    max: 0.9999937505926937,\n    sum: 99904.73041411326,\n    mean: 0.49952365207056687,\n    variance: 0.08316120223669865,\n    standard_deviation: 0.2883768406732736 }\n*/\n\n```\n\nAPI\n===\n\n`var stats = require(\"stats-incremental\")()`\n---\n\nCreate a new incremental stats aggregator.\n\n`stats.update(value)`\n---\n\nUpdate the aggregator with a value. Converted to a Number via parseFloat. If this results in NaN the update is skipped.\n\n`stats.getAll()`\n---\n\nGet a up-to-date clone of all of the stats stored.\n\nE.g.\n\n```js\n{ n: 97,\n  min: 2,\n  max: 12,\n  sum: 673,\n  mean: 6.938144329896907,\n  variance: 5.851843979168881,\n  standard_deviation: 2.419058490233107 }\n```\n\n`stats.n`\n---\n\nThe count of observations.\n\n`stats.min`\n---\n\nThe min value observed.\n\n`stats.max`\n---\n\nThe max value observed.\n\n`stats.sum`\n---\n\nThe sum of all values observed.\n\n`stats.mean`\n---\n\nThe arithmetic mean of the observations.\n\n`stats.variance`\n---\n\nThe variance from the mean.\n\n`stats.standard_deviation`\n---\n\nThe standard deviation of the values from the mean.\n\nAlternatives\n---\n\n[stats-lite](http://npm.im/stats-lite) Operates on complete sets of numbers.\n\n[stream-statistics](http://npm.im/stream-statistics) Is a similar module dedicated to streams.\n\nLICENSE\n=======\n\nMIT\n","maintainers":[{"name":"bryce","email":"bryce@ravenwall.com"}],"time":{"modified":"2014-09-03T21:20:49.394Z","created":"2014-05-22T18:37:29.560Z","1.0.0":"2014-05-22T18:37:29.560Z","1.0.1":"2014-09-03T19:40:44.368Z","1.1.0":"2014-09-03T21:20:49.394Z"},"homepage":"https://github.com/brycebaril/stats-incremental","keywords":["stats","statistics","numbers","math","sum","mean","average","variance","deviation"],"repository":{"type":"git","url":"git://github.com/brycebaril/stats-incremental.git"},"author":{"name":"Bryce B. Baril"},"bugs":{"url":"https://github.com/brycebaril/stats-incremental/issues"},"license":"MIT","readmeFilename":"README.md","_attachments":{},"_etag":"W/\"54078631-1e60\"","_lastModified":"Wed, 03 Sep 2014 21:20:49 GMT"}